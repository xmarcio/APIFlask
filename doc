openapi: 3.0.0
info:
  title: API Flask
  description: API Responsável por integrar cursos, formações e professores.
  version: 1.0.0
  contact:
    name: Marcio Seefeld
    url:  http://www.cloudopss.com.br
    email: marcioseefeld@gmail.com
servers:
  - url: http://localhost:5000
paths:
  /login:
    post:
      tags:
        - Auth
      operationId: login
      description: Realizar login do usuário com as credenciais.
      requestBody: 
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LoginRequest'
              
      responses: 
         '200':
           description: 'Login realizado com sucesso'
           content:
             'application/json':
               schema:
                 $ref: '#/components/schemas/TokenResponse'
         '400':
           description: 'Houveram erros de validação'
           content:
             'application/json':
               schema:
                 $ref: '#/components/schemas/ErrorResponse'
         '401':
            description: 'Credenciais inválidas'
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /token/refresh:
    post:
      tags:
        - Auth
      operationId: refresh
      description: Autenticar o usuário através do refresh token
      requestBody:
        content:
          'aplication':
            schema:
             $ref: '#/components/schemas/RefreshRequest'
      responses:
         '200':
           description: Autenticação realizada com sucesso
           content:
             'aplication':
               schema:
                 $ref: '#/components/schemas/TokenResponse'
  /cursos:
    post:
      tags:
        - Cursos
      operationId: cadastrarCurso
      description: Cadastrar Curso 
      security: 
        - JWT: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CursoRequest'
              
      responses:
        '201':
          description: 'Curso cadastrado com sucesso'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CursoResponse'
        '400':
          description: 'Houve erros de validação'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Usuário não autorizado, somente administradores'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'                
        '404':
          description: 'Formação não encontrada'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get: 
      tags:
        - Cursos
      description: 'Listar todos os cursos'
      security:
        - JWT: []
      responses:
        '200':
          description: 'Listagem de cursos realizada com sucesso'
          content:
            'aplication/jason':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CursoResponse'
        '401':
          description: 'Usuario não esta autorizado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cursos/{cursoid}:
    get:
      tags:
        - Cursos
      operationId: detalharCurso
      description: 'Detalhar curso por id'
      parameters: 
        - name: cursoid
          in: path
          description: id do curso a ser detalhado
          required: true
          schema:
            type: integer
      security:
        - JWT: []
      responses:
        '200':
          description: 'Curso detalhado com sucesso'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/CursoResponse'
        '401':
          description: 'Usuário não autenticado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Curso não foi encontrado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
    put:
      tags:
        - Cursos
      description: 'Atualizar Cursos'
      operationId: atualizarCurso
      parameters: 
        - name: cursoid
          in: path
          description: id do curso a ser atualizado
          required: true
          schema:
            type: integer
      security: 
        - JWT: []
      requestBody:
        content:
          'aplication/json':
            schema:
              $ref: '#/components/schemas/CursoRequest'
      responses:
        '200':
          description: 'Curso atualizado com sucesso'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/CursoResponse'
        '400':
          description: 'Ouve erros na validação dos dados'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'       
        '401':
          description: 'Usuário não autenticado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Curso não foi encontrado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
    delete:
      tags:
        - Cursos
      description: 'Excluir Curso'
      operationId: excluirCurso
      parameters: 
        - name: cursoid
          in: path
          description: id do curso a ser removido
          required: true
          schema:
            type: integer
      security:
        - JWT: []
      responses:  
        '204':
          description: 'Curso excluído com sucesso'
        '401':
          description: 'Usuário não autenticado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Curso não foi encontrado'
          content:
            'aplication/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  
components:
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - senha
      properties:
         email:
          type: string
          format: email
         senha: 
          type: string
          format: password
    TokenResponse:
      type: object
      properties:
       access_token:
        type: string
       refresh_token:
         type: string
    ErrorResponse:
        type: object
        properties:
         error:
          type: string
    RefreshRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
    CursoRequest:
      type: object
      required:
        - nome
        - descricao
        - data_publicacao
        - formacao
      properties:
        nome:
          type: string
          maxLength: 50
        descricao:
          type: string
          maxLength: 100
        data_publicacao:
          type: string
          format: date
        formacao:
          type: string
    CursoResponse:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descricao: 
          type: string
        data_publicaco:
          type: string
          format: date
        formacao:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkResponse'
    LinkResponse:
      type: object
      properties:
        get:
          type: string
        put:
          type: string
        delete:
          type: string
        
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api-key
        
       
